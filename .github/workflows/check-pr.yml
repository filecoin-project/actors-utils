name: Rust PR

on:
  pull_request:
    # Default types for PR are opened, synchronize, reopened. Need
    # ready_for_review to catch a PR that is moving from draft to not-draft
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-build:
    if: github.event.pull_request.draft == false 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: make check-build
  actor-tests:
    if: github.event.pull_request.draft == false 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test Actors
        run: make test-actors
  code-coverage:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing Cargo llvm-cov
      uses: taiki-e/install-action@bc0a06a003a8225fe3e896c9ed3a4c3cc2e8416a
      with:
        tool: cargo-llvm-cov@0.4.5
    - name: Running tests with coverage
      run: make ci-test-coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
      with:
        files: ci-coverage.info
        token: ${{ secrets.CODECOV_TOKEN }}
        # Codecov is flaky and will randomly fail. We'd rather not have random failures on master.
        fail_ci_if_error: false
        verbose: true
